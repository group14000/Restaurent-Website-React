{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\Github - Repo\\\\Restaurent-Website-React\\\\restaurent-website\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n  _s = $RefreshSig$();\n// Importing the 'useRef' and 'useState' hooks from 'react'\nimport { useRef, useState } from 'react';\n\n// Importing the 'Input' component\nimport Input from '../../UI/Input';\n\n// Importing CSS classes for styling\nimport classes from './MealItemForm.module.css';\n\n// Defining the 'MealItemForm' functional component with props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealItemForm = props => {\n  _s();\n  // State to manage the validity of the entered amount\n  const [amountIsValid, setAmountIsValid] = useState(true);\n\n  // Creating a ref to access the input element\n  const amountInputRef = useRef();\n\n  // Handler function for form submission\n  const submitHandler = event => {\n    event.preventDefault();\n\n    // Getting the entered amount from the input ref\n    const enteredAmount = amountInputRef.current.value;\n\n    // Parsing the entered amount as a number\n    const enteredAmountNumber = +enteredAmount;\n\n    // Validating the entered amount\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      // Setting 'amountIsValid' to 'false' and exiting the function\n      setAmountIsValid(false);\n      return;\n    }\n\n    // Calling the 'onAddToCart' prop with the entered amount as an argument\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  // Rendering a form with input, button, and validation message\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n// Exporting the 'MealItemForm' component for use in other parts of the application\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n_c = MealItemForm;\nexport default MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["useRef","useState","Input","classes","jsxDEV","_jsxDEV","MealItemForm","props","_s","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","className","form","onSubmit","children","ref","label","input","id","type","min","max","step","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/Github - Repo/Restaurent-Website-React/restaurent-website/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["// Importing the 'useRef' and 'useState' hooks from 'react'\r\nimport { useRef, useState } from 'react';\r\n\r\n// Importing the 'Input' component\r\nimport Input from '../../UI/Input';\r\n\r\n// Importing CSS classes for styling\r\nimport classes from './MealItemForm.module.css';\r\n\r\n// Defining the 'MealItemForm' functional component with props\r\nconst MealItemForm = (props) => {\r\n  // State to manage the validity of the entered amount\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  // Creating a ref to access the input element\r\n  const amountInputRef = useRef();\r\n\r\n  // Handler function for form submission\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Getting the entered amount from the input ref\r\n    const enteredAmount = amountInputRef.current.value;\r\n\r\n    // Parsing the entered amount as a number\r\n    const enteredAmountNumber = +enteredAmount;\r\n\r\n    // Validating the entered amount\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      // Setting 'amountIsValid' to 'false' and exiting the function\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    // Calling the 'onAddToCart' prop with the entered amount as an argument\r\n    props.onAddToCart(enteredAmountNumber);\r\n  };\r\n\r\n  // Rendering a form with input, button, and validation message\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label='Amount'\r\n        input={{\r\n          id: 'amount_' + props.id,\r\n          type: 'number',\r\n          min: '1',\r\n          max: '5',\r\n          step: '1',\r\n          defaultValue: '1',\r\n        }}\r\n      />\r\n      {/* Button for adding the item to the cart */}\r\n      <button>+ Add</button>\r\n      {/* Displaying a validation message if 'amountIsValid' is 'false' */}\r\n      {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\n// Exporting the 'MealItemForm' component for use in other parts of the application\r\nexport default MealItemForm;\r\n"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAExC;AACA,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AACA,OAAOC,OAAO,MAAM,2BAA2B;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMU,cAAc,GAAGX,MAAM,CAAC,CAAC;;EAE/B;EACA,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAO,CAACC,KAAK;;IAElD;IACA,MAAMC,mBAAmB,GAAG,CAACH,aAAa;;IAE1C;IACA,IACEA,aAAa,CAACI,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IACjCF,mBAAmB,GAAG,CAAC,IACvBA,mBAAmB,GAAG,CAAC,EACvB;MACA;MACAR,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACF;;IAEA;IACAH,KAAK,CAACc,WAAW,CAACH,mBAAmB,CAAC;EACxC,CAAC;;EAED;EACA,oBACEb,OAAA;IAAMiB,SAAS,EAAEnB,OAAO,CAACoB,IAAK;IAACC,QAAQ,EAAEZ,aAAc;IAAAa,QAAA,gBACrDpB,OAAA,CAACH,KAAK;MACJwB,GAAG,EAAEf,cAAe;MACpBgB,KAAK,EAAC,QAAQ;MACdC,KAAK,EAAE;QACLC,EAAE,EAAE,SAAS,GAAGtB,KAAK,CAACsB,EAAE;QACxBC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,GAAG;QACRC,GAAG,EAAE,GAAG;QACRC,IAAI,EAAE,GAAG;QACTC,YAAY,EAAE;MAChB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEFjC,OAAA;MAAAoB,QAAA,EAAQ;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAErB,CAAC7B,aAAa,iBAAIJ,OAAA;MAAAoB,QAAA,EAAG;IAAkC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEX,CAAC;;AAED;AAAA9B,EAAA,CAvDMF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAwDlB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}