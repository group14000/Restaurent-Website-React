{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\Github - Repo\\\\Restaurent-Website-React\\\\restaurent-website\\\\src\\\\components\\\\Layout\\\\HeaderCartButton.js\",\n  _s = $RefreshSig$();\n// Importing necessary hooks and components from 'react'\nimport { useContext, useEffect, useState } from 'react';\n\n// Importing the 'CartIcon' component\nimport CartIcon from '../Cart/CartIcon';\n\n// Importing the 'CartContext' from the store\nimport CartContext from '../../store/cart-context';\n\n// Importing CSS classes for styling\nimport classes from './HeaderCartButton.module.css';\n\n// Defining the 'HeaderCartButton' functional component with props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderCartButton = props => {\n  _s();\n  // State to manage button highlight animation\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n\n  // Accessing the cart context using 'useContext'\n  const cartCtx = useContext(CartContext);\n\n  // Extracting 'items' from the cart context\n  const {\n    items\n  } = cartCtx;\n\n  // Calculating the total number of cart items\n  const numberOfCartItems = items.reduce((curNumber, item) => {\n    return curNumber + item.amount;\n  }, 0);\n\n  // Composing CSS classes for the button, including 'bump' class for animation\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\n\n  // Setting up an effect to handle button highlight animation\n  useEffect(() => {\n    // If there are no items in the cart, don't animate\n    if (items.length === 0) {\n      return;\n    }\n    // Trigger the button highlight animation\n    setBtnIsHighlighted(true);\n\n    // Create a timer to remove the highlight after 300 milliseconds\n    const timer = setTimeout(() => {\n      setBtnIsHighlighted(false);\n    }, 300);\n\n    // Cleanup function to clear the timer when the component unmounts\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [items]);\n\n  // Rendering the cart button with icon, text, and badge\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n// Exporting the 'HeaderCartButton' component for use in other parts of the application\n_s(HeaderCartButton, \"mY+PPfE43aeTZpe9F3TN9SbH6iI=\");\n_c = HeaderCartButton;\nexport default HeaderCartButton;\nvar _c;\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"names":["useContext","useEffect","useState","CartIcon","CartContext","classes","jsxDEV","_jsxDEV","HeaderCartButton","props","_s","btnIsHighlighted","setBtnIsHighlighted","cartCtx","items","numberOfCartItems","reduce","curNumber","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","className","onClick","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","badge","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/Github - Repo/Restaurent-Website-React/restaurent-website/src/components/Layout/HeaderCartButton.js"],"sourcesContent":["// Importing necessary hooks and components from 'react'\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\n// Importing the 'CartIcon' component\r\nimport CartIcon from '../Cart/CartIcon';\r\n\r\n// Importing the 'CartContext' from the store\r\nimport CartContext from '../../store/cart-context';\r\n\r\n// Importing CSS classes for styling\r\nimport classes from './HeaderCartButton.module.css';\r\n\r\n// Defining the 'HeaderCartButton' functional component with props\r\nconst HeaderCartButton = (props) => {\r\n  // State to manage button highlight animation\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n\r\n  // Accessing the cart context using 'useContext'\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  // Extracting 'items' from the cart context\r\n  const { items } = cartCtx;\r\n\r\n  // Calculating the total number of cart items\r\n  const numberOfCartItems = items.reduce((curNumber, item) => {\r\n    return curNumber + item.amount;\r\n  }, 0);\r\n\r\n  // Composing CSS classes for the button, including 'bump' class for animation\r\n  const btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : ''}`;\r\n\r\n  // Setting up an effect to handle button highlight animation\r\n  useEffect(() => {\r\n    // If there are no items in the cart, don't animate\r\n    if (items.length === 0) {\r\n      return;\r\n    }\r\n    // Trigger the button highlight animation\r\n    setBtnIsHighlighted(true);\r\n\r\n    // Create a timer to remove the highlight after 300 milliseconds\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    // Cleanup function to clear the timer when the component unmounts\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [items]);\r\n\r\n  // Rendering the cart button with icon, text, and badge\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        {/* Rendering the 'CartIcon' component */}\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      {/* Displaying the number of items in the cart as a badge */}\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\n// Exporting the 'HeaderCartButton' component for use in other parts of the application\r\nexport default HeaderCartButton;\r\n"],"mappings":";;AAAA;AACA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAEvD;AACA,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,OAAOC,WAAW,MAAM,0BAA0B;;AAElD;AACA,OAAOC,OAAO,MAAM,+BAA+B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAMW,OAAO,GAAGb,UAAU,CAACI,WAAW,CAAC;;EAEvC;EACA,MAAM;IAAEU;EAAM,CAAC,GAAGD,OAAO;;EAEzB;EACA,MAAME,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAAC,CAACC,SAAS,EAAEC,IAAI,KAAK;IAC1D,OAAOD,SAAS,GAAGC,IAAI,CAACC,MAAM;EAChC,CAAC,EAAE,CAAC,CAAC;;EAEL;EACA,MAAMC,UAAU,GAAI,GAAEf,OAAO,CAACgB,MAAO,IAAGV,gBAAgB,GAAGN,OAAO,CAACiB,IAAI,GAAG,EAAG,EAAC;;EAE9E;EACArB,SAAS,CAAC,MAAM;IACd;IACA,IAAIa,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;IACA;IACAX,mBAAmB,CAAC,IAAI,CAAC;;IAEzB;IACA,MAAMY,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7Bb,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,OAAO,MAAM;MACXc,YAAY,CAACF,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;;EAEX;EACA,oBACEP,OAAA;IAAQoB,SAAS,EAAEP,UAAW;IAACQ,OAAO,EAAEnB,KAAK,CAACmB,OAAQ;IAAAC,QAAA,gBACpDtB,OAAA;MAAMoB,SAAS,EAAEtB,OAAO,CAACyB,IAAK;MAAAD,QAAA,eAE5BtB,OAAA,CAACJ,QAAQ;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACP3B,OAAA;MAAAsB,QAAA,EAAM;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtB3B,OAAA;MAAMoB,SAAS,EAAEtB,OAAO,CAAC8B,KAAM;MAAAN,QAAA,EAAEd;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEb,CAAC;;AAED;AAAAxB,EAAA,CApDMF,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAqDtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}